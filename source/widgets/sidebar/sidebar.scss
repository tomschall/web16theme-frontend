$sidebarObjectGutter: 26px;
$sidebarObjectPush: $basicPush * 3;

.widg_sidebar {
	@include span(3);
	@include push(0.3);
	@include clearfix();

	margin-top: 120px;
	position: relative;

	transition: min-height $transitionLength / 2 $transitionEase;

	@include mq($to: 'subnav') {
		width: 100%;
		float: left;
		padding: 0;
		margin: 0;
		position: relative;
	}
}

.widg_sidebar__object {
	border: 1px solid $colorGreyHover;
	margin-bottom: $basicPush * 3;
	background: $colorBg;

	.is_requested {
		transition: padding-bottom $transitionLength / 2 $transitionEase;
	}

	@include mq($to: 'subnav') {
		border: none;
	}
}

.object__title {
	padding: $sidebarObjectGutter - 10 ($sidebarObjectGutter + 12 + 8) 0 $sidebarObjectGutter;
	position: relative;
	z-index: zindex(sidebarTitle);

	margin-top: 0;

	@include iconDataurl('accordeon_close_grey', $after: true);

	background-color: $colorBg;
	color: $colorTextDarkGrey;

	// transition: all $transitionLength / 2 $transitionEase;

	&:after {
		position: absolute;

		right: $sidebarObjectGutter;
		top: 50%;

		transform: translateY(-50%) rotate(45deg) scale(0.6);
		opacity: 0;

		transition: all $transitionLength / 2 $transitionEase;
	}

	> h4 {
		margin-top: 0;
		position: relative;
		padding-bottom: $sidebarObjectGutter - 7;

		&:after {
			display: block;
			content: " ";

			position: absolute;
			bottom: 0;
			left: 0;
			right: -1 * (($sidebarObjectGutter + 12 + 8) - $sidebarObjectGutter);

			padding: 0;
			height: 1px;

			background-color: $colorGreyHover;

			transition: left $transitionLength $transitionEase, right $transitionLength $transitionEase;
		}
	}

	.is_fixed & {
		position: fixed;

		cursor: pointer;

		background-color: $colorBg;
		border: 1px solid $colorGreyHover;
		border-bottom: none;
		color: $colorTextGrey;

		&:hover {
			background-color: $colorLightGray;
			color: $colorBlack;

			@include iconDataurl('accordeon_close', $after: true);

			&:after {
				position: absolute;

				right: $sidebarObjectGutter;
				top: 50%;

				transform: translateY(-50%) rotate(45deg);
			}
		}

		&:after {
			transform: translateY(-50%) rotate(45deg) scale(1.0);

			opacity: 1.0;
		}

		> h4:after {
			left: -1 * $sidebarObjectGutter;
			right: -1 * ($sidebarObjectGutter + 12 + 8);
		}
	}

	.is_requested & {
		&:after,
		&:hover:after {
			transform: translateY(-50%) rotate(90deg) scale(1.0);
		}
	}

	.is_pulled-down & {
		> h4:after {
			left: 0;
			right: -1 * (($sidebarObjectGutter + 12 + 8) - $sidebarObjectGutter);
		}
	}

	.is_pushed & {
		transition: top $transitionLength / 2 $transitionEase, margin-top $transitionLength / 2 $transitionEase;
	}
}

.object__content {
	padding: $sidebarObjectGutter - 9 $sidebarObjectGutter $sidebarObjectGutter;
	z-index: zindex(sidebarContent);

	p {
		font-size: 1.25rem;
		margin: 0;
	}

	.is_requested & {
		position: fixed;
		border: 1px solid $colorGreyHover;
		background-color: $colorBg;
	}

	.is_pulled-down & {
		transition: top $transitionLength / 2 $transitionEase;

		border-top: 0;
	}
}

.widg_sidebar__trigger {
	position: absolute;
	top: -1 * $sidebarObjectPush;
	left: 0;
	right: 0;
	height: 1px;
}

.widg_sidebar__hider {
	position: fixed;
	top: 0;

	display: none;

	height: $sidebarObjectPush;
	background-color: $colorBg;

	z-index: zindex(sidebarHider);

	&.is_visible {
		display: block;
	}

	.hide_hider & {
		display: none;
	}
}

.object__content a.button:not(.not-default).small_button {
	font-size: 0.91667rem;

	width: 100%;
	min-width: 0;

	line-height: 1.4;
	position: relative;

	span {
		display: block;
		position: absolute;

		top: 50%;
		left: 50%;
		transform: translate(-50%, -50%);

		width: 90%;
	}

	@include mq($to: 'large') {
		letter-spacing: 1.5px;
	}
}

.object__content dl {
	dt,
	dd {
		margin: 0;
		width: 100%;
		font-size: 1.25rem;
	}

	dt {
		font-weight: 600;
		margin-bottom: $basicPush * 0.3;
	}

	dd {
		margin-bottom: $basicPush * 1.7;

		&:last-of-type {
			margin-bottom: 0;
		}
	}
}
