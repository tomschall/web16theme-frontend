.widg_application_accordeon {

	.widg_accordeon__button {
		display: flex;
		justify-content: space-between;
		align-items: center;
	}

	.widg_accordeon_item {
		display: flex;
		flex-direction: row;
		justify-content: space-between;
		align-items: center;
		background: $colorLightGray;
	  	padding: $basicPush;
	    //gap: 1rem;
	  	transition: all $transitionLength / 6 $transitionEase;
	  	cursor: pointer;

	  	&:hover {
			background-color: $colorGreyHover;
			color: $colorBlack;
		}
	}

  	/*
  		Workaround for gap since old safari versions don't support it correctly.
  		From safari 14.1 on it's supported.

  		https://www.falldowngoboone.com/blog/the-curious-case-of-flexbox-gap-and-safari/
  		and
  		https://stackoverflow.com/questions/65452057/flexbox-gap-workaround-for-safari
  	 */
  	@include mq($from: small) {
	  	.widg_accordeon_item > * + * {
			padding-left: 10px;
			display: inline-block;
			padding-right: 5px;
	  	}

	  	.event_location {
			grid-column-end: span 2;
		  	padding-left: 28px; // 18px width of .availability + 10px padding-left of .availability.
		}

	  	 .availability ~ .event_location{
		  	padding-left: 10px;
		   	padding-right: 5px;
		}
	}

	.event_location {
	  	font-size: $textSize;
	  	font-weight: 700;
	}

	.availability {
	  	flex: 0 0 auto;
	  	width: 18px;
	  	height: 18px;
	  	border-radius: 50%;
	  	background-color: $colorBlack;
	  	content: " ";

		&.state-red {
			background-color: $colorAvailabilityRed;
		}

		&.state-green {
			background-color: $colorAvailabilityGreen;
		}
	}

	.event_location {
		flex: 10;
	}

	.widg_accordoen_location {
		flex: 5;
	  	font-weight: 100;
	}

	.widg_accordeon_btn {
		flex: 4;

		a {
		  	display: inline-block;
		  	line-height: 1.3;
		  	text-align: center;
			color: $colorBg;
			font-size: 1.25rem;
			text-decoration: none;
			opacity: 1;
			font-weight: 600;
		  	background-color: $colorBlack;
	  		padding: $basicPush 30px;

		  	&:hover,
			&:active,
			&:focus {
				color: $colorBlack;
				background-color: $colorYellow;
			}

		  	&:disabled,
			&.disabled,
			&[disabled="disabled"] {
				opacity: 0.4;
				color: $colorBg;
			  	pointer-events: none;
			}
		}
	}

  	.widg_accordeon__more {
		/*
			other accordeon close-buttons have right: 20px
			since we can't align one item to the right we use padding: 20px - 12px (width) = 8px
		 */
	  	padding: 8px;
	  	@include iconDataurl('accordeon_close_grey', $after: true);

	  	&:after {
		  	transition: transform $transitionLength / 2 $transitionEase;
			vertical-align: middle;
		  	transform: rotate(45deg);
		}

	}

  	.widg_accordeon__entry.is_open > .widg_accordeon_item {
		background-color: $colorYellowAccordeonActive;
		color: $colorBlack;

		&:hover {
			background-color: $colorYellowAccordeonActive;
		}

	  	.widg_accordeon__more:after {
		  	transform: rotate(90deg)
		}
	}

  	@include mq($to: medium) {

	  	.widg_accordeon_btn {
		  	display: none;
		}

	  	.button__apply___inside {
		  	display: inline-block;
		}

	}

  	@include mq($to: small) {
	  	.widg_accordeon_item {
		  	display: grid;
		  	grid-template-columns: 15px 8fr 35px;
		  	line-height: 1.4;
		  	gap: 0.4em;
		}

	  	.availability {
		  	grid-row-start: 2;
		  	width: 12px;
		  	height: 12px;
		}

	  	.event_location {
			grid-column-end: span 2;
		}

	  	.widg_accordoen_location {
		  	color: $colorTextGrey;
		  	grid-row-start: 2;
		  	grid-column-end: span 2;
		}

	  	/* Only start in column 2 if sibling with class availability exists. */
	  	.availability.state-red ~ .widg_accordoen_location,
		.availability.state-green ~ .widg_accordoen_location {
		  	grid-column-start: 2;
		  	grid-column-end: span 1;
		}

	  	.widg_accordeon__more {
		  	grid-row-start: 1;
		  	grid-row-end: span 2;
		  	grid-column-start: 3;
		  	text-align: right;
		}

	}

  	@media print {
	  	.widg_accordeon_item {
		  	display: block;
		  	left: 0px;
		  	margin: 0px;
		  	padding: 0px;
		  	border-bottom: 2pt solid $colorMouseoverGrau;
		  	color: $colorBlack;
		}

	  	.event_location {
		  	display: block;
		}

	  	.widg_accordoen_location {
		  	font-size: 10pt;
		}
	}

	a.button.mini_button.button__apply {
			cursor: pointer;
	}

	.widg_accordeon__content {
		dt,
		dd {
			border-bottom: none;

			@media print {
				display: block;
				float: left;
				width: 50%;
				font-size: 10pt;
			}
		}

		dl > div {
			@include clearfix();
			border-bottom: 1px solid $colorGreyHover;
		}

		p {
			font-size: 1.25rem;
		}

		.ical {
			font-weight: 600;

			display: inline-block;
			margin-left: 14px;

			@include iconDataurl('ical');

			&:before {
				width: 20px;
				height: 18px;

				vertical-align: middle;
				transform: translateY(-1px);
				margin-right: 8px;
			}

			@media print {
				display: none;
			}
		}

		.button__apply___inside {
			/*display: none;*/

			@include mq($to: medium) {
				display: inline-block;
			}
		}

		@media print {
			display: block;
			width: 100%;
			margin-bottom: 5pt;
		}
	}
}
