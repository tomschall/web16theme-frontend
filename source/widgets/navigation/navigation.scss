.widg_navigation {
	margin-top: $basicPush * 4 + 7;
	margin-left: -1 * $gutter;
	margin-right: -1 * $gutter;

	/**
	Hide on shrinked fixed header
	**/
	&.widg_header__hide-on-shrinked {
		transform: none;
	}

	@include mq($to: $sizeBreakpointMedium) {
		display: none;
		margin-top: 0;

		.is_nav-open & {
			display: block;

			margin-left: 0;
			margin-right: 0;
		}
	}
}

/**
Navigation Level: 0 (global minimum for all),
styling of all links and lists
**/
.widg_navigation__list {
	display: none;

	&[data-navigation-level="0"] {
		display: block;
	}

	ul {
		@include resetList();
	}


}

.widg_navigation__list ul li a {
	cursor: pointer;
	position: relative;

	display: block;
	width: 100%;
	font-family: $fontSerifRoman;

	font-size: 1.5rem;
	padding: 12px $gutter - 3 11px $gutter;

	text-decoration: none;
	opacity: 1;


	&.widg_navigation__back {
		display: none;
	}

	&:hover:not(.is_active) {
		background-color: $colorYellowNavHover;
	}

	&.is_active {
		background-color: $colorYellowNavHover;

		&:before {
			left: 0;
			visibility: visible;
		}
	}

	&.is_expandable {
		@include iconDataurl($name: 'triangle-arrow_right', $after: true);

		//Hover for the triangle (arrow)
		&:hover:after {
			opacity: 1;
			right: $basicPush * 2;
		}

		//The arrow of the expandable nav items
		&:after {
			transition: all $transitionLength / 2 $transitionEase;

			right: $basicPush * 2.5;
			top: 50%;

			height: 10px;
			width: 10px;

			opacity: 0;

			transform: translateY(-50%);

			content: " ";
			position: absolute;
		}

		&.is_active {
			&:after {
				opacity: 1;
				right: $basicPush * 2;
			}
		}

		//Smaller the right margin on touch screens
		@include mq($to: $sizeBreakpointMedium) {
			&:after,
			&:hover:after,
			&.is_active:after {
				opacity: 1;
				right: $basicPush * 2;
			}
		}
	}

	@include mq($to: $sizeBreakpointMedium) {
		padding: 17px $basicPush * 4 16px $basicPush * 4;
	}

	@include mq($to: $sizeBreakpointSmall) {
		padding: 15px $basicPush * 2 14px $basicPush * 2;

		font-size: 1.3rem;
	}

}

/**
The back arrow only visible on mobile navigation
**/
.widg_navigation__back {
	@include iconDataurl('arrow');

	text-indent: -100000px;

	&:before {
		position: absolute;
		top: 50%;
		left: $basicPush * 4;
		visibility: visible;

		background-color: transparent;

		transform: translateY(-50%) rotate(180deg);

		width: 34px;
		height: 13px;

		@include mq($to: $sizeBreakpointSmall) {
			left: $basicPush * 2;
		}
	}
}

/**
 The Stylings for the the navigation lists, depending on their level
**/
.widg_navigation__list[data-navigation-level="0"] {
	ul li a {
		&.is_active:before {
			left: -10px;
		}
	}
}

.widg_navigation__list[data-navigation-level="1"],
.widg_navigation__list[data-navigation-level="2"],
.widg_navigation__list[data-navigation-level="3"]{
	ul li a {

		margin-bottom: 2px;

		&:hover {
			background-color: $colorSubNavHover;
		}

		&.is_active,
		&.is_active:hover {
			background-color: $colorSubNavActive;
		}
	}
}


/**
The Subwrappers only desktop
**/

.widg_navigation__sub-wrapper{
	transition: all $transitionLength / 2 $transitionEase;

	opacity: 0;
	z-index: -500;

	position: fixed;
	top: 0;

	width: $widthYellowBar;

	box-shadow: 3px 0 29px 0 rgba($colorBlack, 0.10);

	> .widg_navigation__list {
		display: block;
		margin-top: $basicPush * 12.4;
	}

	@include mq($from: $sizeBreakpointMedium) {
		height: 100vh;
	}

	//Extended Header (Wide) only exists between betweener and wide
	@include mq($from: $sizeBreakpointBetweener, $to: $sizeBreakpointWide) {
		.header__wide & {
			width: $widthYellowBarWide;
		}
	}

	/**
    * Supersized YellowBar
    */
	@include mq($from: $sizeBreakpointWide) {
		width: $widthYellowBarSuperWide;
	}

	&[data-navigation-level="1"] {
		left: 180px;

		@include mq($from: $sizeBreakpointWide) {
			left: 350px;
		}

		@include mq($from: $sizeBreakpointBetweener, $to: $sizeBreakpointWide) {
			.header__wide & {
				left: 250px;
			}
		}
	}

	&[data-navigation-level="2"] {
		left: 410px;

		@include mq($from: $sizeBreakpointWide) {
			left: 750px;
		}

		@include mq($from: $sizeBreakpointBetweener, $to: $sizeBreakpointWide) {
			.header__wide & {
				left: 550px;
			}
		}
	}

	&[data-navigation-level="3"] {
		left: 640px;

		@include mq($from: $sizeBreakpointWide) {
			left: 1150px;
		}

		@include mq($from: $sizeBreakpointBetweener, $to: $sizeBreakpointWide) {
			.header__wide & {
				left: 850px;
			}
		}
	}
}

/**
Subtitle for every additional layer (only desktop)
**/

.widg_navigation__subtitle {
	font-size: 1rem;
	font-family: $fontSansSerifRoman;
	letter-spacing: 2.9px;
	text-transform: uppercase;
	line-height: 1.8;

	position: absolute;
	top: $basicPush * 3.4;

	padding: 0 $basicPush * 3.2;

	color: $colorTextGrey;

	@include mq($to: $sizeBreakpointMedium) {
		display: none;
	}
}

/**
Background-Colors for the additional navigation layers
**/

[data-navigation-level="1"],
[data-navigation-level="2"],
[data-navigation-level="3"] {
	background-color: $colorBg;
}

/**
Mobile Styles
for better overview they are seperated here
**/

@include mq($to: $sizeBreakpointMedium) {
	.widg_navigation {
		position: relative;
	}

	.widg_navigation__list {

		transition: all $transitionLength $transitionEase;

		position: absolute;
		top: 0;
		padding-top: $basicPush * 4;
		left: -4 * $basicPush;
		z-index: zindex('mobileNavigation');

		width: 100vw;

		&.is_visible {
			display: block;
		}

		&[data-navigation-level="1"],
		&[data-navigation-level="2"],
		&[data-navigation-level="3"]{
			left: calc(100vw - 40px);
			// @TODO: if header top height changes, this has to be reflected here too
			height: calc(100vh - 70px);

			.widg_navigation__back {
				display: block;
			}

			@include mq($to: $sizeBreakpointSmall) {
				left: calc(100vw - 20px);
			}
		}

		&[data-navigation-level="2"] {
			left: calc(200vw - 40px);

			@include mq($to: $sizeBreakpointSmall) {
				left: calc(200vw - 20px);
			}
		}


		&[data-navigation-level="3"] {
			left: calc(300vw - 40px);

			@include mq($to: $sizeBreakpointSmall) {
				left: calc(300vw - 20px);
			}
		}

		@include mq($to: $sizeBreakpointSmall) {
			padding-top: $basicPush * 2;
			left: -2 * $basicPush;
		}
	}
}
